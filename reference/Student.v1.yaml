openapi: 3.0.0
info:
  title: Student
  version: '1.0'
  description: ''
servers:
  - url: 'http://dev-api.campusjunior.com'
paths:
  /students:
    get:
      summary: Get list students
      tags:
        - students
      responses:
        '200':
          description: Array of list students
          content:
            application/json:
              schema:
                $ref: ./campus-junior/models/students.v1.yaml
              examples:
                reponse:
                  value:
                    status: 200
                    data:
                      - {}
                    metadata: '{ totalPage, pageSize, totalRecords}'
      operationId: get-students
      parameters:
        - in: query
          name: page
          default: 1
          description: Page to get list students
          schema:
            type: number
        - in: query
          name: limit
          default: 25
          description: Limit number of students on each page
          schema:
            type: number
        - schema:
            type: string
          in: query
          name: grade
        - schema:
            type: string
          in: query
          name: roles
        - schema:
            type: string
          in: query
          name: className
        - schema:
            type: string
          in: query
          name: parentsId
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/students.v1.yaml
    post:
      summary: ''
      operationId: post-students
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: ./models/students.v1.yaml
              examples:
                res:
                  value:
                    status: 200
                    data: {}
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/students.v1.yaml
      tags:
        - students
  '/students/{studentId}':
    parameters:
      - schema:
          type: string
        name: studentId
        in: path
        required: true
    get:
      summary: Get a specific student
      tags:
        - students
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Students'
              examples:
                example-1:
                  value:
                    status: 200
                    data: {}
        '400':
          description: Success
          content:
            application/json:
              schema:
                $ref: ./models/students.v1.yaml
              examples:
                example-1:
                  value:
                    status: 200
                    data: {}
            application/xml:
              schema:
                $ref: ./common/error.v1.yaml
              examples: {}
      operationId: get-students-studentId
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic:
                  type: string
                message:
                  type: string
            examples:
              example-1:
                value:
                  topic: Weekly meeting
                  message: Weekly meeting at ... when ... where ...
    put:
      summary: ''
      operationId: put-students-studentId
      responses:
        '200':
          description: Return student record which was just updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Students'
              examples:
                example-1:
                  value:
                    status: 200
                    data: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ./common/error.v1.yaml
      tags:
        - students
    delete:
      summary: ''
      operationId: delete-students-studentId
      responses:
        '200':
          description: Delete success
          content:
            application/json:
              schema:
                $ref: ./common/successMess.v1.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../common/error.v1.yaml
      tags:
        - students
  /notifs/students:
    post:
      summary: Notify to many students
      operationId: post-notifs-students
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./campus-junior/models/message.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic:
                  type: string
                message:
                  type: string
                studentIds:
                  type: array
                  items:
                    type: integer
            examples:
              example-1:
                value:
                  topic: Meeting
                  message: Meeting
                  studentIds:
                    - 1
                    - 2
                    - 3
        description: ''
      tags:
        - students
  '/notifs/students/{studentId}':
    parameters:
      - schema:
          type: string
        name: studentId
        in: path
        required: true
    post:
      summary: Notif to a student
      operationId: post-notifs-students-studentId
      tags:
        - notifs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./campus-junior/models/message.v1.yaml
      description: Notify to a student
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
components:
  schemas:
    Students:
      description: A list of students.
      title: Students
      x-tags:
        - Students
      items:
        $ref: ./campus-junior/models/students.v1.yaml
      type: array
  securitySchemes:
    Bearer accessToken:
      type: http
      scheme: bearer
security:
  - Bearer accessToken: []
