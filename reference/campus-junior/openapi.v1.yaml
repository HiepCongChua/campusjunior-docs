openapi: 3.0.0
info:
  title: campus-junior-api-docs
  version: '1.0'
  description: ''
servers:
  - url: 'http://dev-api.campusjunior.com'
paths:
  /teachers:
    get:
      operationId: listTeachers
      parameters:
        - schema:
            type: number
          in: query
          name: limit
          default: 25
          description: Limit number of teachers on each page
        - schema:
            type: string
          in: query
          name: roles
          description: List of users have the same role
        - schema:
            type: string
          in: query
          name: page
      responses:
        '200':
          description: A paged array of teachers
          content:
            application/json:
              schema:
                $ref: ./models/teachers.v1.yaml
              examples:
                response:
                  value:
                    status: 200
                    data:
                      - {}
                    metadata: '{ totalPage, pageSize, totalRecords}'
            application/xml:
              schema:
                type: object
                properties: {}
      description: List all teachers
      tags:
        - teachers
      requestBody: {}
    post:
      operationId: createTeacher
      responses:
        '200':
          description: A object teacher was created
          content:
            application/json:
              schema:
                $ref: ./models/teachers.v1.yaml
              examples:
                res:
                  value:
                    status: 200
                    data: {}
      description: Create teacher
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/teachers.v1.yaml
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties: {}
          application/xml:
            schema:
              type: object
        $ref: ../common/requestBody/createTeacher.v1.yaml
      tags:
        - teachers
  '/teachers/{teacherId}':
    get:
      summary: Info for a specific teacher
      operationId: getTeacherById
      tags:
        - teachers
      parameters:
        - name: teacherId
          in: path
          required: true
          description: The id of the teacher to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: ./models/teachers.v1.yaml
              examples:
                example-1: {}
        '400':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/error.v1.yaml
    delete:
      tags:
        - teachers
      description: Delete a teacher
      openrationId: deleteTeacher
      requestBody: null
      responses:
        '200':
          description: Delete success
          content:
            application/json:
              schema:
                $ref: ../common/successMess.v1.yaml
              examples: {}
        '404':
          description: Not found user
          content:
            application/json:
              schema:
                $ref: ../common/error.v1.yaml
      parameters:
        - name: teacherId
          in: path
          required: true
          description: The id of the teacher to retrieve
          schema:
            type: string
    put:
      tags:
        - teachers
      description: Update a teacher
      openrationId: updateTeacher
      requestBody:
        $ref: ../common/requestBody/createTeacher.v1.yaml
      responses:
        '200':
          description: A object teacher was just updated
          content:
            application/json:
              schema:
                $ref: ./models/teachers.v1.yaml
        '400':
          description: Not found user
          content:
            application/json:
              schema:
                $ref: ../common/error.v1.yaml
      parameters:
        - name: teacherId
          in: path
          required: true
          description: The id of the teacher to retrieve
          schema:
            type: string
    parameters:
      - schema:
          type: string
        name: teacherId
        in: path
        required: true
  /notifs/teachers:
    post:
      tags:
        - teachers
      summary: ''
      operationId: post-notifs-teachers
      responses:
        '200':
          description: Send message success
          content:
            application/json:
              schema:
                $ref: ../common/successMess.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              description: |
                Array of teacher id to receive message
              type: object
              properties:
                topic:
                  type: string
                message:
                  type: string
                teacherIds:
                  type: array
                  items:
                    type: number
              required:
                - topic
                - message
                - teacherIds
            examples:
              example request body:
                value:
                  topic: Weekly meeting
                  message: Weekly meeting at ... when ... where ...
                  teacherIds:
                    - 1
                    - 4
                    - 5
  '/notifs/{teacherId}':
    parameters:
      - schema:
          type: string
        name: teacherId
        in: path
        required: true
    post:
      tags:
        - teachers
      summary: ''
      operationId: post-notifs-teacherId
      description: Send messge to a teacher
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic:
                  type: string
                message:
                  type: string
            examples:
              example request body:
                value:
                  topic: Weekly meeting
                  message: Weekly meeting at ... when ... where ...
        description: ''
      responses:
        '200':
          description: Delete success
          content:
            application/json:
              schema:
                $ref: ../common/successMess.v1.yaml
        '404':
          description: Not found teacher
          content:
            application/json:
              schema:
                $ref: ../common/error.v1.yaml
  /students:
    get:
      summary: Your GET endpoint
      tags:
        - students
      responses:
        '200':
          description: Array of list students
          content:
            application/json:
              schema:
                $ref: ./models/students.v1.yaml
              examples:
                reponse:
                  value:
                    status: 200
                    data:
                      - {}
                    metadata: '{ totalPage, pageSize, totalRecords}'
      operationId: get-students
      parameters:
        - in: query
          name: page
          default: 1
          description: Page to get list students
          schema:
            type: number
        - in: query
          name: limit
          default: 25
          description: Limit number of students on each page
          schema:
            type: number
        - schema:
            type: string
          in: query
          name: grade
        - schema:
            type: string
          in: query
          name: roles
        - schema:
            type: string
          in: query
          name: className
        - schema:
            type: string
          in: query
          name: parentsId
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/students.v1.yaml
    post:
      summary: ''
      operationId: post-students
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: ./models/students.v1.yaml
              examples:
                res:
                  value:
                    status: 200
                    data: {}
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/students.v1.yaml
      tags:
        - students
  '/students/{studentId}':
    parameters:
      - schema:
          type: string
        name: studentId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - students
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Students'
              examples:
                example-1:
                  value:
                    status: 200
                    data: {}
        '400':
          description: Success
          content:
            application/json:
              schema:
                $ref: ./models/students.v1.yaml
              examples:
                example-1:
                  value:
                    status: 200
                    data: {}
            application/xml:
              schema:
                $ref: ../common/error.v1.yaml
              examples: {}
      operationId: get-students-studentId
      description: ''
    put:
      summary: ''
      operationId: put-students-studentId
      responses:
        '200':
          description: Return student record which was just updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Students'
              examples:
                example-1:
                  value:
                    status: 200
                    data: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../common/error.v1.yaml
      tags:
        - students
    delete:
      summary: ''
      operationId: delete-students-studentId
      responses:
        '200':
          description: Delete success
          content:
            application/json:
              schema:
                $ref: ../common/successMess.v1.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../common/error.v1.yaml
      tags:
        - students
  /notifs/students:
    post:
      summary: ''
      operationId: post-notifs-students
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic:
                  type: string
                message:
                  type: string
                studentIds:
                  type: array
                  items:
                    type: integer
            examples:
              example-1:
                value:
                  topic: Meeting
                  message: Meeting
                  studentIds:
                    - 1
                    - 2
                    - 3
        description: ''
      tags:
        - students
  /subjects:
    get:
      summary: Your GET endpoint
      tags:
        - subjects
      responses:
        '200':
          description: Array list of subjects
          content:
            application/json:
              schema:
                $ref: ./models/subjects.v1.yaml
        '':
          description: ''
      operationId: get-subjects
      parameters:
        - schema:
            type: string
          in: query
          name: grade
          description: Filter subjects by grade
    post:
      summary: ''
      operationId: post-subjects
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: ./models/subjects.v1.yaml
      description: ''
      tags:
        - subjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/subjects.v1.yaml
  '/subjects/{subjectId}':
    parameters:
      - schema:
          type: string
        name: subjectId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - subjects
      responses:
        '200':
          description: Return the subject matched
          content:
            application/json:
              schema:
                $ref: ./models/subjects.v1.yaml
              examples:
                example-1:
                  value:
                    status: 200
                    data: {}
      operationId: get-subjects-subjectId
    put:
      operationId: put-subjects-subjectId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/subjects.v1.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../common/error.v1.yaml
              examples:
                example-1:
                  value:
                    status: 400
                    messasge: Not found subject
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/subjects.v1.yaml
      description: Update a subject
      tags:
        - subjects
    delete:
      operationId: delete-subjects-subjectId
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: ../common/successMess.v1.yaml
              examples:
                example-1:
                  value:
                    status: 200
                    mesesage: Delete success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../common/error.v1.yaml
              examples:
                example-1:
                  value:
                    status: 200
                    message: Not found subject
      description: Delete a subject
      tags:
        - subjects
  /subjects/mark-average:
    parameters: []
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/subjects-average.v1.yaml
      description: ''
      parameters:
        - schema:
            type: string
          in: query
          name: schoolYear
      requestBody: {}
      operationId: get-subjects-subject-id-mark-average
  '/subjects/{subjectId}/markAverages':
    parameters:
      - schema:
          type: string
        name: subjectId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/subject-average.v1.yaml
      operationId: get-subject-subject-id-mark-average
      description: ''
      parameters:
        - schema:
            type: string
          in: query
          name: schoolYear
  /news:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: Array of list news
          content:
            application/json:
              schema:
                $ref: ./models/school-news.v1.yaml
      operationId: get-news
      description: ''
      parameters:
        - schema:
            type: string
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: page
        - schema:
            type: string
          in: query
          name: status
        - schema:
            type: string
          in: query
          name: tags
    post:
      summary: ''
      operationId: post-news
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/school-news.v1.yaml
  '/news/{newId}':
    parameters:
      - schema:
          type: string
        name: newId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/school-news.v1.yaml
      operationId: get-news-newId
    put:
      summary: ''
      operationId: put-news-newId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/school-news.v1.yaml
    delete:
      summary: ''
      operationId: delete-news-newId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../common/successMess.v1.yaml
  /news/comments:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: Array list of comment
          content:
            application/json:
              schema:
                $ref: ./models/new-comments.v1.yaml
      operationId: get-news-comments
      parameters:
        - schema:
            type: string
            default: '1'
          in: query
          name: page
        - schema:
            type: string
            default: '5'
          in: query
          name: limit
  '/news/comments/{commentId}':
    parameters:
      - schema:
          type: string
        name: commentId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-news-comments-commentId
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/new-comments.v1.yaml
    delete:
      summary: ''
      operationId: delete-news-comments-commentId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../common/successMess.v1.yaml
components:
  schemas:
    Teachers:
      type: array
      items:
        $ref: ./models/teachers.v1.yaml
      x-tags:
        - Teachers
      title: Teachers
      description: A list of teachers.
    Students:
      description: A list of students.
      title: Students
      x-tags:
        - Students
      items:
        $ref: ./models/students.v1.yaml
      type: array
    Subjects:
      description: A list of subjects.
      title: Subjects
      x-tags:
        - Subjects
      items:
        $ref: ./models/subjects.v1.yaml
      type: array
    News:
      $ref: ./models/school-news.v1.yaml
  securitySchemes:
    Bearer accessToken:
      type: http
      scheme: bearer
security:
  - Bearer accessToken: []
