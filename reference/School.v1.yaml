openapi: 3.0.0
info:
  title: School
  version: '1.0'
  description: CRUD School
servers:
  - url: 'http://dev-api.campusjunior.com'
paths:
  /schools:
    get:
      summary: GET
      tags: []
      responses:
        '200':
          description: |-
            {
                "status": 200,
                "data": [
                    {
                    "id":1,
                     "name":"Thuan Thanh I",
                     "amount":2000,
                     "gradeLevel":2
                    },
                     {
                     "id":2,
                    "name":"Thuan Thanh II",
                     "amount":1700,
                   "gradeLevel":2
                    }
                ],
                "metadata": "{ totalPage:1, pageSize:10, totalRecords:2}"
            }
      operationId: get-schools
      description: List schools
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                idDepartment:
                  type: integer
                studyLevel:
                  type: integer
                amount:
                  type: integer
        description: ''
      parameters:
        - schema:
            type: number
          in: query
          name: limit
          description: ''
        - schema:
            type: number
          in: query
          name: page
    parameters: []
    post:
      summary: POST
      operationId: post-school
      responses:
        '200':
          description: |-
            {
            "status":200,
            "message":"Success"
            }
      description: Create school
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                amount:
                  type: integer
                studyLevel:
                  type: integer
                idDepartment:
                  type: integer
              required:
                - name
                - amount
                - studyLevel
                - idDepartment
  '/schools/{schoolId}':
    put:
      summary: PUT
      operationId: put-schools
      responses:
        '200':
          description: |-
            {
             status:200,
             message:"Success"
            }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                amount:
                  type: integer
                studyLevel:
                  type: integer
                idDepartment:
                  type: integer
        description: ''
      description: Update a school
    delete:
      summary: DELETE
      operationId: delete-schools
      responses:
        '200':
          description: |-
            {
             status:200,
             message:"Success"
            }
      description: Delete a school
    parameters:
      - schema:
          type: integer
        name: schoolId
        in: path
        required: true
components:
  schemas:
    School:
      title: School
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        studyLevel:
          type: integer
          description: |
            School level of school
        idDepartment:
          type: integer
          description: |
            Department of school
        amount:
          type: integer
  securitySchemes:
    Bearer accessToken:
      type: http
      scheme: bearer
